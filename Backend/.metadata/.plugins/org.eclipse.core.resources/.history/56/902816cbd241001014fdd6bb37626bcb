package com.dsp.otpregistration.service;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dsp.otpregistration.dto.RegistrationRequest;
import com.dsp.otpregistration.entity.PersonEntry;
import com.dsp.otpregistration.entity.RegistrationMaster;
import com.dsp.otpregistration.repository.PersonEntryRepository;
import com.dsp.otpregistration.repository.RegistrationMasterRepository;

@Service
public class RegistrationMasterService {

    @Autowired
    private RegistrationMasterRepository masterRepo;

    @Autowired
    private PersonEntryRepository entryRepo;

    public String registerUser(RegistrationRequest request) {
        Optional<RegistrationMaster> optional = masterRepo.findByMobile(request.getRegMobile());

        RegistrationMaster rm = optional.orElseGet(() -> {
            RegistrationMaster newMaster = new RegistrationMaster();
            newMaster.setMobile(request.getRegMobile());
            newMaster.setOtpVerified(false);
            newMaster.setRegistrationComplete(false);
            newMaster.setPaymentDone(false);
            newMaster.setCreatedAt(LocalDateTime.now());
            return masterRepo.save(newMaster);
        });

        PersonEntry person = new PersonEntry();
        person.setFirstName(request.getName());
        person.setDob(LocalDate.parse(request.getDob())); // Format: yyyy-MM-dd
        person.setRole(request.getRole());
        person.setRegistration(rm);

        entryRepo.save(person);

        rm.setRegistrationComplete(true);
        masterRepo.save(rm);

        return "User registered successfully";
    }

    public List<PersonEntry> getPersonEntriesByMobile(String mobile) {
        RegistrationMaster rm = masterRepo.findByMobile(mobile).orElseThrow(
            () -> new RuntimeException("User not found with mobile: " + mobile));
        return entryRepo.findByRegistration(rm);
    }

    public boolean isMobileRegistered(String mobile) {
        return masterRepo.findByMobile(mobile).isPresent();
    }
}
