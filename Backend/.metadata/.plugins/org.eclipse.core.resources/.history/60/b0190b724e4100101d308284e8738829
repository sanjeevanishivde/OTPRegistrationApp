package com.itv.dpsregistration.controller;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.itv.dpsregistration.dto.RegistrationRequest;
import com.itv.dpsregistration.entity.PersonEntry;
import com.itv.dpsregistration.entity.RegistrationMaster;
import com.itv.dpsregistration.repository.PersonEntryRepository;
import com.itv.dpsregistration.repository.RegistrationMasterRepository;

@RestController
@RequestMapping("/api/register")
public class RegistrationController {

    @Autowired
    private RegistrationMasterRepository masterRepo;

    @Autowired
    private PersonEntryRepository entryRepo;

    @PostMapping
    public String register(@RequestBody RegistrationRequest request) {
        // Check if user already exists
        Optional<RegistrationMaster> optional = masterRepo.findByMobile(request.getRegMobile());
        RegistrationMaster rm = optional.orElseGet(() -> {
            RegistrationMaster newMaster = new RegistrationMaster();
            newMaster.setMobile(request.getRegMobile());
            newMaster.setOtpVerified(false);
            newMaster.setRegistrationComplete(false);
            newMaster.setPaymentDone(false);
            newMaster.setCreatedAt(LocalDateTime.now());
            return masterRepo.save(newMaster);
        });

        PersonEntry person = new PersonEntry();
        person.setFirstName(request.getName());
        person.setDob(LocalDate.parse(request.getDob())); // Format: yyyy-MM-dd
        person.setRole(request.getRole());
        person.setRegistration(rm);

        entryRepo.save(person);
        rm.setRegistrationComplete(true);
        masterRepo.save(rm);

        return "User registered successfully";
    }

    @GetMapping("/{mobile}/entries")
    public List<PersonEntry> getPersonEntriesByMobile(@PathVariable String mobile) {
        RegistrationMaster rm = masterRepo.findByMobile(mobile).orElseThrow();
        return entryRepo.findByRegistration(rm);
    }
}
